<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <title>표시 화면</title>
  <link rel="stylesheet" href="/styles.css" />
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <h1>2025 SS ALPHA CONFERENCE</h1>
  <table>
    <colgroup>
      <col style="width: 10%;" />  <!-- Rank -->
      <col style="width: 50%;" />  <!-- QTF 이름 -->
      <col style="width: 13%;" />  <!-- Q -->
      <col style="width: 13%;" />  <!-- T -->
      <col style="width: 13%;" />  <!-- F -->
    </colgroup>
    <thead>
      <tr>
        <th>Rank</th>
        <th>QTF</th>
        <th>Best ALPHA</th>
        <th>Best ACADEMIC</th>
        <th>Best CHALLENGING</th>
      </tr>
    </thead>
    <tbody id="scoreBody"></tbody>
  </table>
<script>
  const socket = io();

  socket.on("scoreUpdated", (data) => {
    const teams = data.teams;
    renderTable(teams);
  });

  async function fetchInitialTeams() {
    const res = await fetch("/api/teams");
    const teams = await res.json();
    renderTable(teams);
  }

  function renderTable(teams) {
    // 항목별 최고 점수 계산
    const maxQ = Math.max(...teams.map(t => t.q));
    const maxT = Math.max(...teams.map(t => t.t));
    const maxF = Math.max(...teams.map(t => t.f));

    // 순위 계산: q 기준
    const sortedByQ = [...teams].sort((a, b) => b.q - a.q);
    const rankMap = {};
    let currentRank = 0;
    let prevQ = null;

    sortedByQ.forEach((team, index) => {
      if (team.q !== prevQ) {
        currentRank = index + 1;
        prevQ = team.q;
      }
      rankMap[team.name] = currentRank;
    });

    // 이름순으로 렌더링
    const sortedByName = [...teams].sort((a, b) => a.name.localeCompare(b.name, "ko"));
    const tbody = document.getElementById("scoreBody");
    tbody.innerHTML = "";

    sortedByName.forEach((team) => {
      const rank = rankMap[team.name];

      // 조건: 최고 점수 + 0점이 아닌 경우에만 색상 적용
      const qClass = team.q === maxQ && maxQ > 0 ? "alpha-top" : "";
      const tClass = team.t === maxT && maxT > 0 ? "academic-top" : "";
      const fClass = team.f === maxF && maxF > 0 ? "challenging-top" : "";

      const row = document.createElement("tr");
      row.classList.add("default"); // 전체 행 기본색

      row.innerHTML = `
        <td>${rank}</td>
        <td>${team.name}</td>
        <td class="${qClass}">${team.q}</td>
        <td class="${tClass}">${team.t}</td>
        <td class="${fClass}">${team.f}</td>
      `;

      tbody.appendChild(row);
    });
  }

  fetchInitialTeams();
</script>

</body>
</html>
