<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <title>조작 화면</title>
  <link rel="stylesheet" href="/styles.css" />
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <h1>조작용 점수판</h1>
  <table>
  <colgroup>
    <col style="width: 6%;" />  <!-- Rank -->
    <col style="width: 25%;" /> <!-- QTF 이름 (좁게) -->
    <col style="width: 6%;" />  <!-- Q -->
    <col style="width: 6%;" />  <!-- T -->
    <col style="width: 6%;" />  <!-- F -->
    <col style="width: 6%;" />  <!-- Total -->
    <col style="width: 35%;" /> <!-- Control (넓게) -->
  </colgroup>
  <thead>
    <tr>
      <th>Rank</th>
      <th>QTF</th>
      <th>Q</th>
      <th>T</th>
      <th>F</th>
      <th>Total</th>
      <th>Control</th>
    </tr>
  </thead>
  <tbody id="scoreBody"></tbody>
</table>

    <tbody id="scoreBody"></tbody>
  </table>

  <script>
    const socket = io();
    let teams = [];

    socket.on("scoreUpdated", (data) => {
      teams = data.teams;
      renderTable();
    });

    async function fetchInitial() {
      const res = await fetch("/api/teams");
      teams = await res.json();
      renderTable();
    }

    function renderTable() {
      const sortedByTotal = [...teams].sort((a, b) => (b.q + b.t + b.f) - (a.q + a.t + a.f));
      let rankMap = {};
      let currentRank = 0;
      let prevTotal = null;
      sortedByTotal.forEach((team, index) => {
        const total = team.q + team.t + team.f;
        if (total !== prevTotal) {
          currentRank = index + 1;
          prevTotal = total;
        }
        rankMap[team.name] = currentRank;
      });

      const tbody = document.getElementById("scoreBody");
      tbody.innerHTML = "";

      const sortedByName = [...teams].sort((a, b) => a.name.localeCompare(b.name, "ko"));
      sortedByName.forEach((team) => {
        const rank = rankMap[team.name];
        const total = team.q + team.t + team.f;

        const row = document.createElement("tr");
        if (total === 0) {
          row.classList.add("default");
        } else if (rank === 1) {
          row.classList.add("gold");
        } else if (rank === 2) {
          row.classList.add("silver");
        } else if (rank === 3) {
          row.classList.add("bronze");
        }

        row.innerHTML = `
					<td>${rank}</td>
					<td>${team.name}</td>
					<td>${team.q}</td>
					<td>${team.t}</td>
					<td>${team.f}</td>
					<td>${total}</td>
					<td>
						<div>
							<div>Q:
								<button onclick="addScore('${team.name}', 'q', 1)">+1</button>
								<button onclick="addScore('${team.name}', 'q', -1)">-1</button>
							</div>
							<div>T:
								<button onclick="addScore('${team.name}', 't', 1)">+1</button>
								<button onclick="addScore('${team.name}', 't', -1)">-1</button>
							</div>
							<div>F:
								<button onclick="addScore('${team.name}', 'f', 1)">+1</button>
								<button onclick="addScore('${team.name}', 'f', -1)">-1</button>
							</div>
						</div>
					</td>
				`;

        tbody.appendChild(row);
      });
    }

    async function addScore(name, field, points) {
      await fetch("/api/teams/add", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, field, points }),
      });
    }

    fetchInitial();
  </script>
</body>
</html>
